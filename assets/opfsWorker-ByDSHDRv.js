(function(){"use strict";self.onmessage=async g=>{const{files:l,singleFileTest:p}=g.data;if(typeof self.navigator.storage.getDirectory!="function"){self.postMessage({error:"OPFS Sync Access Handle API not supported."});return}try{const r=await self.navigator.storage.getDirectory();if(p){const a=await r.getFileHandle("opfsSyncTestFile",{create:!0}),c=performance.now(),f=await a.createSyncAccessHandle(),d=await l[0].arrayBuffer();f.write(d),f.close();const s=performance.now()-c,t=performance.now(),n=await a.createSyncAccessHandle(),o=n.getSize(),i=new ArrayBuffer(o);n.read(i,{at:0}),n.close();const u=performance.now()-t;self.postMessage({writeTime:s,readTime:u,singleFileTest:!0})}else{const a=[];for(let e=0;e<l.length;e++){const t=await(await r.getFileHandle(`opfsSyncTestFile_${e}`,{create:!0})).createSyncAccessHandle(),n=await l[e].arrayBuffer(),o=performance.now();t.write(n),t.close();const i=performance.now();a.push(i-o)}const c=[];for(let e=0;e<l.length;e++){const t=await(await r.getFileHandle(`opfsSyncTestFile_${e}`)).createSyncAccessHandle(),n=t.getSize(),o=new ArrayBuffer(n),i=performance.now();t.read(o,{at:0}),t.close();const w=performance.now();c.push(w-i)}const f=a.reduce((e,s)=>e+s,0)/a.length,d=c.reduce((e,s)=>e+s,0)/c.length;self.postMessage({writeTime:f,readTime:d,singleFileTest:!1})}}catch(r){self.postMessage({error:r.message})}}})();
